service: thumbnail-generator

frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.8
  region: eu-central-1
  profile: serverless-admin
  stage: "dev"
  timeout: 10
  memorySize: 128
  layers:
      - arn:aws:lambda:eu-central-1:770693421928:layer:Klayers-p38-Pillow:4
  environment:
    THUMBNAIL_SIZE: "128"
    DYNAMODB_TABLE: ${self:custom.dynamotable}
    REGION_NAME: ${self:provider.region}

  
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Resource: '*'
          Action: 's3:*'
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

  
custom:
  dynamotable: image-url-table
  bucket: thumbnail-generator.rewiso.ch
  pythonRequirements:
   # pythonBin: /opt/python3.8/bin/python
    dockerizePip: true


functions:
  generate:
    handler: handler.s3_thumbnail_generator
    events:
      - s3:
          bucket: ${self:custom.bucket}
          event: s3:ObjectCreated:*
          rules:
            - suffix: .png
      - http:
            path: thumbnails
            method: post 
            cors: true 

  list:
      handler: handler.s3_get_thumbnail_urls
      events:
        - http:
            path: thumbnails
            method: get 
            cors: true

  get:
      handler: handler.s3_get_item
      events:
        - http:
            path: thumbnails/{id}
            method: get 
            cors: true 

  delete:
      handler: handler.s3_delete_item
      events:
        - http:
            path: thumbnails/{id}
            method: delete 
            cors: true 


         
  
      

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
resources:
 Resources:
   ImagesDynamoDbTable:
     Type: AWS::DynamoDB::Table
     Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"

#MUST first run: serverless plugin install -n serverless-python-requirements
plugins:
  - serverless-python-requirements